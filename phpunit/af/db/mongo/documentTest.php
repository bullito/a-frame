<?php
namespace af\db\mongo;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-09-27 at 23:19:32.
 */
class documentTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var document
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $mongo  =   new \Mongo;
        $this->db   =   $mongo->{'test'.time()};
        $this->coll =   $this->db->tests;
        
        $this->one    =   array(
            'int' =>  1,
            'array' =>  array(1, 2, 3),
            'assoc' =>  array(
                'a' => 1,
                'b' => '2'
            )
        );
        
        $this->coll->save($this->one);
        
        $ref    =   \MongoDBRef::create('tests', $this->one['_id']);
        
        $this->two    =   array(
            'one'   =>  $ref,
            'tests' =>  array(
                'deep1' =>  array(
                    'ee' => 11
                ),
                'refs'  =>  array(
                    $ref
                )
            )
        );
        
        $this->coll->save($this->two);
        $app        =   new \app;
        $app->db    =   $this->db;
        $this->docone  =   new document($app, $this->one);
        $this->doctwo  =   new document($app, $this->two);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        $this->db->drop();
    }

    /**
     * @covers af\db\mongo\document::db
     * @todo   Implement testDb().
     */
    public function testDb()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers af\db\mongo\document::offsetGet
     * @todo   Implement testOffsetGet().
     */
    public function testOffsetGet()
    {
        $this->assertEquals(1, $this->docone['int']);
        $this->assertEquals(1, $this->docone['array'][0]);
        $this->assertEquals(2, $this->docone['array'][1]);
        
        
        $this->assertEquals($this->one['_id'], $this->doctwo['one']['$id']);
        $this->assertEquals(1, $this->doctwo['one']['int']);
        
        $this->assertInstanceOf('\af\db\mongo\document\embed', $this->doctwo['tests']);
        $this->assertInstanceOf('\af\db\mongo\document\embed', $this->doctwo['tests']['refs']);
        $this->assertInstanceOf('\af\db\mongo\document\ref', $this->doctwo['tests']['refs'][0]);
        
        $this->assertEquals(1, $this->doctwo['tests']['refs'][0]['int']);
        
        
    }

    /**
     * @covers af\db\mongo\document::offsetSet
     * @todo   Implement testOffsetSet().
     */
    public function testOffsetSet()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers af\db\mongo\document::offsetExists
     * @todo   Implement testOffsetExists().
     */
    public function testOffsetExists()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers af\db\mongo\document::offsetUnset
     * @todo   Implement testOffsetUnset().
     */
    public function testOffsetUnset()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

}
